# coding: utf-8

from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import asyncio
import os

steps = [
    {'step': 1, 'positions': [{'duration_min': 1}]},
    {'step': 2, 'positions': [{'duration_min': 2}]},
    {'step': 3, 'positions': [{'duration_min': 3}]}
]  # –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

API_TOKEN = os.getenv("TOKEN")
CHANNEL_USERNAME = "@sunxstyle"

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

user_states = {}

def steps_keyboard():
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    buttons = [
        KeyboardButton(f"–®–∞–≥ {s['step']} ‚Äî {int(sum(p['duration_min'] for p in s['positions']))} –º–∏–Ω") for s in steps
    ]
    kb.add(*buttons)
    kb.add(KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ"))
    return kb

@dp.message_handler(commands=["start"])
async def start_cmd(msg: types.Message):
    await msg.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —à–∞–≥:", reply_markup=steps_keyboard())

@dp.message_handler(lambda m: m.text == "üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —à–∞–≥–∞–º")
async def back_to_steps(msg: types.Message):
    await msg.answer("–í–æ—Ç –º–µ–Ω—é —à–∞–≥–æ–≤:", reply_markup=steps_keyboard())

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
